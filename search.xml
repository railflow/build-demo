<?xml version="1.0" ?>
<testsuite name="Avacados.search" tests="100" failures="10" errors="0" skipped="30" timestamp="2025-04-23T10:00:00" time="12.345">
  <testcase classname="com.example.MyTestClass" name="testMethod0" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethssod1" time="0.123"/>
    <testcase classname="com.example.MyTestClass" name="ffffrwee" time="0.123"/>
      <testcase classname="com.example.MyTestClass" name="testMethcfffffod1" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod3" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod15" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod21" time="0.123">
    <failure message="Test failed" type="AssertionError">	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at com.example.MyTestClass.testMethod(MyTestClass.java:42)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)</failure>
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod22" time="0.123">
    <skipped/>
  </testcase>
 
  
  <testcase classname="com.example.MyTestClass" name="testMethod32" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod36" time="0.123"/>
  
  <testcase classname="com.example.MyTestClass" name="testMethod38" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod39" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMetsshod40" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod41" time="0.123">
    <failure message="Test failed" type="AssertionError">	at com.example.MyTestClass.testMethod(MyTestClass.java:42)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
java.lang.AssertionError: expected:&lt;true&gt; but was:&lt;false&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</failure>
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod45" time="0.123">
    <failure message="Test failed" type="AssertionError">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at com.example.MyTestClass.testMethod(MyTestClass.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)</failure>
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod46" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod47" time="0.123">
   
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod48" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod51" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod52" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod53" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod54" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod55" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod56" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod57" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod67" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod68" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod69" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod70" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod71" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod72" time="0.123">
    <failure message="Test failed" type="AssertionError">java.lang.AssertionError: expected:&lt;true&gt; but was:&lt;false&gt;
	at com.example.MyTestClass.testMethod(MyTestClass.java:42)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</failure>
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod73" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod83" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod84" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod85" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod86" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod87" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod88" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod89" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod90" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod91" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod92" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod93" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod94" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod95" time="0.123"/>
  <testcase classname="com.example.MyTestClass" name="testMethod96" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod97" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod98" time="0.123">
  </testcase>
  <testcase classname="com.example.MyTestClass" name="testMethod99" time="0.123">
    <failure message="Test failed" type="AssertionError">	at com.example.MyTestClass.testMethod(MyTestClass.java:42)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.AssertionError: expected:&lt;true&gt; but was:&lt;false&gt;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)</failure>
  </testcase>
</testsuite>
